#!/bin/bash

VERSION="0.0.1-20180629"

OS_RELEASE_FILES="/usr/lib/os-release /etc/os-release"

PADDING=0

declare -A OS_RELEASE_INFO
declare -a OS_RELEASE_INFO_KEYS_ORDER

function error() {
	echo "ERROR: $1" >&2
	exit $2
}

function warning() {
	echo "WARNING: $1" >&2
}

function check_os_release_file() {
	for file in $OS_RELEASE_FILES; do
		if [ -f "$file" ]; then
			return 0
		fi
	done
	echo "ERROR: No information (no such files: $OS_RELEASE_FILES)." 1>&2
	exit 1
}

function key_exists() {
	local key="$1"
	[[ "${OS_RELEASE_INFO_KEYS_ORDER[@]}" =~ "$key" ]]
}

function read_os_release_information() {
	for file in $OS_RELEASE_FILES; do
		if [ -f "$file" ]; then
			IFS='='
			while read name value; do
				value=$(sed -e 's/"//g' <<< $value)
				OS_RELEASE_INFO_KEYS_ORDER+=($name)
				OS_RELEASE_INFO[$name]="$value"
			done < $file
			break
		fi
	done
}

function print_keys() {
	for key in ${OS_RELEASE_INFO_KEYS_ORDER[@]}; do
		echo $key
	done
}

function print_os_release_information() {
	IFS='='
	while read name value; do
		name=$(sed -e 's/\(.*\)/\L\1/g; s/_/\ /g; s/^./\U&/g; s/\ ./\U&/g' <<< $name)
		value=$(sed -e 's/"//g' <<< $value)
		printf "%16s: %s\n" $name $value
	done < $OS_RELEASE_FILE
}

function print_help() {
	cat <<EOT
$(basename -- $0) v$VERSION -- Utility to print OS Release information.
GPLv3 Diego Lago GonzÃ¡lez <diego.lago.gonzalez@gmail.com>
Usage: $(basename -- $0) [options] [key [keys...]]
  key(s)    Key(s) to print (case insensitive).
Options:
  -k        Print available keys.
  -x <KEY>  Check if key <KEY> is a valid key.
  -p <PAD>  Left padding to show keys (default: $PADDING).
  -n        Do not print key names.
  -N        Do not pretty print key names.
  -h        Show this help and exit.
Note: OS Release files order: $OS_RELEASE_FILES
EOT
}

function main() {
	check_os_release_file
	print_os_release_information
}

main "$@"

